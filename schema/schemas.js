module.exports = {"component":{"title":"Component protocol","description":"Protocol for handling the component registry.","output":{"error":{"id":"output/error","description":"Component error","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["component"]},"command":{"enum":["error"]}}}]},"component":{"id":"output/component","description":"Transmit the metadata about a component instance.","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["component"]},"command":{"enum":["component"]},"payload":{"required":["name","subgraph","inPorts","outPorts"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"component name in format that can be used in graphs"},"description":{"type":"string","description":"(optional) textual description on what the component does"},"icon":{"type":"string","description":"(optional): visual icon for the component, matching icon names in [Font Awesome](http://fortawesome.github.io/Font-Awesome/icons/)"},"subgraph":{"type":"boolean","description":"boolean telling whether the component is a subgraph"},"inPorts":{"description":"list of input ports, each containing:","$ref":"/shared/port_definition"},"outPorts":{"description":"list of output ports","$ref":"/shared/port_definition"}}}}}]},"source":{"id":"output/source","description":"Source code for a component. In cases where a runtime receives a `source` message, it should do whatever operations are needed for making that component available for graphs, including possible compilation.","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["component"]},"command":{"enum":["source"]},"payload":{"required":["name","language","code"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the component"},"language":{"type":"string","description":"The programming language used for the component code, for example `coffeescript`"},"library":{"type":"string","description":"(optional) Component library identifier"},"code":{"type":"string","description":"Component source code"},"tests":{"type":"string","description":"(optional) unit tests for the component"}}}}}]}},"input":{"error":{"id":"input/error","description":"Component error","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["component"]},"command":{"enum":["error"]}}}]},"list":{"id":"input/list","description":"Request a list of currently available components. Will be responded with a set of `component` messages.","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["component"]},"command":{"enum":["list"]}}}]},"getsource":{"id":"input/getsource","description":"Request for the source code of a given component. Will be responded with a `source` message.","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["component"]},"command":{"enum":["getsource"]},"payload":{"required":["name"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the component to for which to get source code"}}}}}]},"source":{"id":"input/source","description":"Source code for a component. In cases where a runtime receives a `source` message, it should do whatever operations are needed for making that component available for graphs, including possible compilation.","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["component"]},"command":{"enum":["source"]},"payload":{"required":["name","language","code"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"Name of the component"},"language":{"type":"string","description":"The programming language used for the component code, for example `coffeescript`"},"library":{"type":"string","description":"(optional) Component library identifier"},"code":{"type":"string","description":"Component source code"},"tests":{"type":"string","description":"(optional) unit tests for the component"}}}}}]}}},"graph":{"$schema":"http://json-schema.org/draft-04/schema#","title":"Graph protocol","description":"This protocol is utilized for communicating about graph changes in both directions.","output":{"error":{"description":"Graph error"},"addnode":{"id":"output/addnode","description":"Add node to a graph.","$ref":"../input/addnode"},"removenode":{"id":"output/removenode","description":"Remove a node from a graph.","$ref":"../input/removenode"},"renamenode":{"id":"output/renamenode","description":"Change the ID of a node in the graph","$ref":"../input/renamenode"},"changenode":{"id":"output/changenode","description":"Change the metadata associated to a node in the graph","$ref":"../input/changenode"},"addedge":{"id":"output/addedge","description":"Add an edge to the graph","$ref":"../input/addedge"},"removeedge":{"id":"output/removeedge","description":"Remove an edge from the graph","$ref":"../input/removeedge"},"changeedge":{"id":"output/changeedge","description":"Change an edge's metadata","$ref":"../input/changeedge"},"addinitial":{"id":"output/addinitial","description":"Add an IIP to the graph","$ref":"../input/addinitial"},"removeinitial":{"id":"output/removeinitial","description":"Remove an IIP from the graph","$ref":"../input/removeinitial"},"addinport":{"id":"output/addinport","description":"Add an exported inport to the graph.","$ref":"../input/addinport"},"removeinport":{"id":"output/removeinport","description":"Remove an exported port from the graph","$ref":"../input/removeinport"},"renameinport":{"id":"output/renameinport","description":"Rename an exported port in the graph","$ref":"../input/renameinport"},"addoutport":{"id":"output/addoutport","description":"Add an exported outport to the graph.","$ref":"../input/addoutport"},"removeoutport":{"id":"output/removeoutport","description":"Remove an exported port from the graph","$ref":"../input/removeoutport"},"renameoutport":{"id":"output/renameoutport","description":"Rename an exported port in the graph","$ref":"../input/renameoutport"},"addgroup":{"id":"output/addgroup","description":"Add a group to the graph","$ref":"../input/addgroup"},"removegroup":{"id":"output/removegroup","description":"Remove a group from the graph","$ref":"../input/removegroup"},"renamegroup":{"id":"output/renamegroup","description":"Rename a group in the graph.","$ref":"../input/renamegroup"},"changegroup":{"id":"output/changegroup","description":"Change a group's metadata","$ref":"../input/changegroup"}},"input":{"error":{"description":"Graph error"},"clear":{"id":"input/clear","description":"Initialize an empty graph.","required":["id"],"additionalProperties":false,"properties":{"id":{"type":"string","description":"identifier for the graph being created. Used for all subsequent messages related to the graph instance"},"name":{"type":"string","description":"(optional) Human-readable label for the graph"},"library":{"type":"string","description":"(optional) Component library identifier"},"main":{"type":"boolean","description":"(optional) Identifies the graph as a main graph of a project that should not be registered as a componentnGraphs registered in this way should also be available for use as subgraphs in other graphs. Therefore a graph registration and later changes to it may cause component messages of the Component protocol to be sent back to the client informing of possible changes in the ports of the subgraph component."}}},"addnode":{"id":"input/addnode","description":"Add node to a graph.","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["graph"]},"command":{"enum":["addnode"]},"payload":{"required":["id","component","graph"],"additionalProperties":false,"properties":{"id":{"type":"string","description":"identifier for the node"},"component":{"type":"string","description":"component name used for the node"},"metadata":{"type":"object","description":"(optional): structure of key-value pairs for node metadata"},"graph":{"type":"string","description":"graph the action targets"}}}}}]},"removenode":{"id":"input/removenode","description":"Remove a node from a graph.","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["graph"]},"command":{"enum":["removenode"]},"payload":{"required":["id","graph"],"additionalProperties":false,"properties":{"id":{"type":"string","description":"identifier for the node"},"graph":{"type":"string","description":"graph the action targets"}}}}}]},"renamenode":{"id":"input/renamenode","description":"Change the ID of a node in the graph","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["graph"]},"command":{"enum":["renamenode"]},"payload":{"required":["from","to","graph"],"additionalProperties":false,"properties":{"from":{"type":"string","description":"original identifier for the node"},"to":{"type":"string","description":"new identifier for the node"},"graph":{"type":"string","description":"graph the action targets"}}}}}]},"changenode":{"id":"input/changenode","description":"Change the metadata associated to a node in the graph","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["graph"]},"command":{"enum":["changenode"]},"payload":{"required":["id","metadata","graph"],"additionalProperties":false,"properties":{"id":{"type":"string","description":"identifier for the node"},"metadata":{"type":"object","description":"structure of key-value pairs for node metadata"},"graph":{"type":"string","description":"graph the action targets"}}}}}]},"addedge":{"id":"input/addedge","description":"Add an edge to the graph","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["graph"]},"command":{"enum":["addedge"]},"payload":{"required":["src","tgt","graph"],"additionalProperties":false,"properties":{"src":{"$ref":"/shared/port","description":"source node for the edge"},"tgt":{"$ref":"/shared/port","description":"target node for the edge"},"metadata":{"type":"object","description":"(optional): structure of key-value pairs for edge metadata"},"graph":{"description":"graph the action targets"}}}}}]},"removeedge":{"id":"input/removeedge","description":"Remove an edge from the graph","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["graph"]},"command":{"enum":["removeedge"]},"payload":{"additionalProperties":false,"properties":{"graph":{"type":"string","description":"graph the action targets"},"src":{"description":"source node for the edge","$ref":"/shared/port"},"tgt":{"description":"target node for the edge","$ref":"/shared/port"}}}}}]},"changeedge":{"id":"input/changeedge","description":"Change an edge's metadata","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["graph"]},"command":{"enum":["changeedge"]},"payload":{"additionalProperties":false,"properties":{"graph":{"type":"string","description":"graph the action targets"},"metadata":{"type":"object","description":"struct of key-value pairs for edge metadata"},"src":{"description":"source node for the edge","$ref":"/shared/port"},"tgt":{"description":"target node for the edge","$ref":"/shared/port"}}}}}]},"addinitial":{"id":"input/addinitial","description":"Add an IIP to the graph","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["graph"]},"command":{"enum":["addinitial"]},"payload":{"additionalProperties":false,"properties":{"graph":{"type":"string","description":"graph the action targets"},"metadata":{"type":"object","description":"(optional): structure of key-value pairs for edge metadata"},"src":{"$ref":"/shared/iip"},"tgt":{"description":"target node for the edge","$ref":"/shared/port"}}}}}]},"removeinitial":{"id":"input/removeinitial","description":"Remove an IIP from the graph","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["graph"]},"command":{"enum":["removeinitial"]},"payload":{"required":["tgt","graph"],"additionalProperties":false,"properties":{"tgt":{"$ref":"/shared/port","description":"target node for the edge"},"graph":{"type":"string","description":"graph the action targets"}}}}}]},"addinport":{"id":"input/addinport","description":"Add an exported inport to the graph.","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["graph"]},"command":{"enum":["addinport"]},"payload":{"additionalProperties":false,"required":["public","port","node","graph"],"properties":{"public":{"type":"string","description":"the exported name of the port"},"node":{"type":"string","description":"node identifier"},"port":{"type":"string","description":"internal port name"},"metadata":{"type":"object","description":"(optional): structure of key-value pairs for node metadata"},"graph":{"type":"string","description":"graph the action targets"}}}}}]},"removeinport":{"id":"input/removeinport","description":"Remove an exported port from the graph","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["graph"]},"command":{"enum":["removeinport"]},"payload":{"additionalProperties":false,"properties":{"public":{"type":"string","description":"the exported name of the port to remove"},"graph":{"type":"string","description":"graph the action targets"}}}}}]},"renameinport":{"id":"input/renameinport","description":"Rename an exported port in the graph","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["graph"]},"command":{"enum":["renameinport"]},"payload":{"additionalProperties":false,"properties":{"from":{"type":"string","description":"original exported port name"},"to":{"type":"string","description":"new exported port name"},"graph":{"type":"string","description":"graph the action targets"}}}}}]},"addoutport":{"id":"input/addoutport","description":"Add an exported outport to the graph.","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["graph"]},"command":{"enum":["addoutport"]},"payload":{"required":["public","node","port","graph"],"additionalProperties":false,"properties":{"public":{"type":"string","description":"the exported name of the port"},"node":{"type":"string","description":"node identifier"},"port":{"type":"string","description":"internal port name"},"metadata":{"type":"object","description":"(optional): structure of key-value pairs for port metadata"},"graph":{"type":"string","description":"graph the action targets"}}}}}]},"removeoutport":{"id":"input/removeoutport","description":"Remove an exported port from the graph","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["graph"]},"command":{"enum":["removeoutport"]},"payload":{"required":["public"],"additionalProperties":false,"properties":{"public":{"type":"string","description":"the exported name of the port to remove"},"graph":{"type":"string","description":"graph the action targets"}}}}}]},"renameoutport":{"id":"input/renameoutport","description":"Rename an exported port in the graph","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["graph"]},"command":{"enum":["renameoutport"]},"payload":{"required":["from","to","graph"],"additionalProperties":false,"properties":{"from":{"type":"string","description":"original exported port name"},"to":{"type":"string","description":"new exported port name"},"graph":{"type":"string","description":"graph the action targets"}}}}}]},"addgroup":{"id":"input/addgroup","description":"Add a group to the graph","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["graph"]},"command":{"enum":["addgroup"]},"payload":{"required":["name","nodes","graph"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"the group name"},"nodes":{"type":"array","description":"an array of node ids part of the group"},"metadata":{"type":"object","description":"(optional): structure of key-value pairs for group metadata"},"graph":{"type":"string","description":"graph the action targets"}}}}}]},"removegroup":{"id":"input/removegroup","description":"Remove a group from the graph","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["graph"]},"command":{"enum":["removegroup"]},"payload":{"required":["name","graph"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"the group name"},"graph":{"type":"string","description":"graph the action targets"}}}}}]},"renamegroup":{"id":"input/renamegroup","description":"Rename a group in the graph.","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["graph"]},"command":{"enum":["renamegroup"]},"payload":{"properties":{"from":{"type":"string","description":"original group name"},"to":{"type":"string","description":"new group name"},"graph":{"type":"string","description":"graph the action targets"}}}}}]},"changegroup":{"id":"input/changegroup","description":"Change a group's metadata","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["graph"]},"command":{"enum":["changegroup"]},"payload":{"required":["name","metadata","graph"],"additionalProperties":false,"properties":{"name":{"type":"string","description":"the group name"},"metadata":{"type":"object","description":"structure of key-value pairs for group metadata"},"graph":{"type":"string","description":"graph the action targets"}}}}}]}}},"network":{"$schema":"http://json-schema.org/draft-04/schema#","title":"Network protocol","description":"Protocol for starting and stopping FBP networks, and finding out about their state.","output":{"stopped":{"id":"output/stopped","description":"Inform that a given network has stopped.","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["network"]},"command":{"enum":["stopped"]},"payload":{"required":["graph"],"additionalProperties":false,"properties":{"time":{"type":"string","format":"date-time","description":"time when the network was stopped"},"uptime":{"type":"number","description":"time the network was running, in seconds"},"graph":{"type":"string","description":"graph the action targets"},"running":{"type":"boolean","description":"whether or not network is currently running"},"started":{"type":"boolean","description":"whether or not network has been started"},"debug":{"type":"boolean","description":"whether or not network is in debug mode"}}}}}]},"started":{"id":"output/started","description":"Inform that a given network has been started.","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["network"]},"command":{"enum":["started"]},"payload":{"required":["graph"],"additionalProperties":false,"properties":{"time":{"type":"string","format":"date-time","description":"time when the network was started"},"graph":{"type":"string","description":"graph the action targets"},"started":{"type":"boolean","description":"whether or not network has started running"},"running":{"type":"boolean","description":"whether or not network is currently running"},"debug":{"type":"boolean","description":"whether or not network is in debug mode"}}}}}]},"status":{"id":"output/status","description":"Response to a getstatus message.","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["network"]},"command":{"enum":["status"]},"payload":{"required":["running","graph","uptime"],"additionalProperties":false,"properties":{"running":{"type":"boolean","description":"boolean tells whether the network is running or not"},"graph":{"type":"string","description":"graph the action targets"},"uptime":{"type":"number","description":"(optional) time the network has been running, in seconds"}}}}}]},"output":{"id":"output/output","description":"An output message from a running network, roughly similar to STDOUT output of a Unix process, or a line of console.log in JavaScript. Output can also be used for passing images from the runtime to the UI.'","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["network"]},"command":{"enum":["output"]},"payload":{"required":["message"],"additionalProperties":false,"properties":{"message":{"type":"string","description":"contents of the output line"},"type":{"type":"string","enum":["message","previewurl"],"description":"(optional) type of output, either message or previewurl"},"url":{"type":"string","format":"uri","description":"(optional) URL for an image generated by the runtime"}}}}}]},"error":{"id":"output/error","description":"An error from a running network, roughly similar to STDERR output of a Unix process, or a line of console.error in JavaScript.'","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["network"]},"command":{"enum":["error"]},"payload":{"required":["message"],"additionalProperties":false,"properties":{"message":{"description":"contents of the error message"}}}}}]},"icon":{"id":"output/icon","description":"Icon of a component instance has changed.","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["network"]},"command":{"enum":["icon"]},"payload":{"required":["id","icon","graph"],"additionalProperties":false,"properties":{"id":{"type":"string","description":"identifier of the node"},"icon":{"type":"string","description":"new icon for the component instance"},"graph":{"type":"string","description":"graph the action targets"}}}}}]},"connect":{"id":"output/connect","description":"Beginning of transmission on an edge.","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["network"]},"command":{"enum":["connect"]},"payload":{"$ref":"/shared/network_event","additionalProperties":false}}}]},"begingroup":{"id":"output/begingroup","description":"Beginning of a group (bracket IP) on an edge.","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["network"]},"command":{"enum":["begingroup"]},"payload":{"allOf":[{"$ref":"/shared/network_event"},{"required":["group"],"properties":{"group":{"description":"group name","type":"string"}}},{"additionalProperties":false,"properties":{"group":true,"id":true,"tgt":true,"src":true,"graph":true,"subgraph":true}}]}}}]},"data":{"id":"output/data","description":"Data transmission on an edge.","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["network"]},"command":{"enum":["data"]},"payload":{"allOf":[{"$ref":"/shared/network_event"},{"required":["data"],"properties":{"data":{"description":"actual data being transmitted, encoded in a way that can be carried over the protocol transport"}}},{"additionalProperties":false,"properties":{"data":true,"id":true,"src":true,"tgt":true,"graph":true,"subgraph":true}}]}}}]},"endgroup":{"id":"output/endgroup","description":"Ending of a group (bracket IP) on an edge.","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["network"]},"command":{"enum":["endgroup"]},"payload":{"allOf":[{"$ref":"/shared/network_event"},{"required":["group"],"properties":{"group":{"description":"group name","type":"string"}}},{"additionalProperties":false,"properties":{"group":true,"id":true,"src":true,"tgt":true,"graph":true,"subgraph":true}}]}}}]},"disconnect":{"id":"output/disconnect","description":"End of transmission on an edge.","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["network"]},"command":{"enum":["disconnect"]},"payload":{"$ref":"/shared/network_event","additionalProperties":false}}}]}},"input":{"error":{"id":"input/error","description":"Network error","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["network"]},"command":{"enum":["error"]}}}]},"start":{"id":"input/start","description":"Start execution of a FBP network based on a given graph.","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["network"]},"command":{"enum":["start"]},"payload":{"required":["graph"],"additionalProperties":false,"properties":{"graph":{"type":"string","description":"graph the action targets"}}}}}]},"getstatus":{"id":"input/getstatus","description":"Get the current status of the runtime. The runtime should respond with a status message.","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["network"]},"command":{"enum":["getstatus"]},"payload":{"required":["graph"],"additionalProperties":false,"properties":{"graph":{"type":"string","description":"graph the action targets"}}}}}]},"stop":{"id":"input/stop","description":"Stop execution of a FBP network based on a given graph.","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["network"]},"command":{"enum":["stop"]},"payload":{"required":["graph"],"additionalProperties":false,"properties":{"graph":{"type":"string","description":"graph the action targets"}}}}}]},"edges":{"id":"input/edges","description":"List of edges user has selected for inspection in a user interface or debugger, sent from UI to a runtime.","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["network"]},"command":{"enum":["edges"]},"payload":{"required":["edges"],"additionalProperties":false,"properties":{"edges":{"type":"array","description":"list of selected edges, each containing","items":{"type":"object","required":["src","tgt"],"additionalProperties":false,"properties":{"src":{"description":"source node for the edge","$ref":"/shared/port"},"tgt":{"description":"target node for the edge","$ref":"/shared/port"}}}}}}}}]}}},"runtime":{"title":"Runtime protocol","description":"When a client connects to a FBP procotol it may choose to discover the capabilities and other information about the runtime.","input":{"error":{"id":"input/error","description":"Runtime error","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["runtime"]},"command":{"enum":["error"]}}}]},"getruntime":{"id":"input/getruntime","description":"Request the information about the runtime. When receiving this message the runtime should response with a runtime message.","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["runtime"]},"command":{"enum":["getruntime"]}}}]},"packet":{"id":"input/packet","description":"Runtimes that can be used as remote subgraphs (i.e. ones that have reported supporting the protocol:runtime capability) need to be able to receive and transmit information packets at their exposed ports.These packets can be send from the client to the runtimes input ports, or from runtimes output ports to the client.","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["runtime"]},"command":{"enum":["packet"]},"payload":{"required":["port","event","graph"],"additionalProperties":false,"properties":{"port":{"type":"string","description":"port name for the input or output port"},"event":{"type":"string","enum":["connect","begingroup","data","endgroup","disconnect"],"description":"packet event"},"graph":{"type":"string","description":"graph the action targets"},"payload":{"type":"object","description":"(optional) payload for the packet. Used only with begingroup (for group names) and data packets"}}}}}]}},"output":{"error":{"id":"output/error","description":"Runtime error","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["runtime"]},"command":{"enum":["error"]}}}]},"ports":{"id":"output/ports","description":"Message sent by the runtime to signal its available ports. The runtime is responsible for sending the up-to-date list of available ports back to client whenever it changes.","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["runtime"]},"command":{"enum":["ports"]},"payload":{"required":["graph","inPorts","outPorts"],"additionalProperties":false,"properties":{"graph":{"type":"string","description":"ID of the currently configured main graph running on the runtime"},"inPorts":{"description":"list of input ports","$ref":"/shared/port_definition"},"outPorts":{"description":"list of output ports","$ref":"/shared/port_definition"}}}}}]},"runtime":{"id":"output/runtime","description":"Response from the runtime to the getruntime request.","allOf":[{"$ref":"/shared/message"},{"properties":{"protocol":{"enum":["runtime"]},"command":{"enum":["runtime"]},"payload":{"required":["version","capabilities","type"],"additionalProperties":false,"properties":{"id":{"type":"string","description":"(optional) runtime ID used with Flowhub Registry"},"label":{"description":"(optional) Human-readable description of the runtime","type":"string"},"version":{"description":"version of the runtime protocol that the runtime supports, for example 0.4","type":"string"},"capabilities":{"description":"array of capability strings for things the runtime is able to do. If the runtime is currently running a graph and it is able to speak the full Runtime protocol, it should follow up with a ports message.","type":"array","items":{"type":"string","enums":["protocol:network","protocol:component","protocol:runtime","component:getsource","network:persist","protocol:graph","component:setsource"],"_enumDescriptions":[{"name":"protocol:network","description":"the runtime is able to control and introspect its running networks using the Network protocol"},{"name":"protocol:component","description":"the runtime is able to list and modify its components using the Component protocol"},{"name":"protocol:runtime","description":"the runtime is able to expose the ports of its main graph using the Runtime protocol and transmit packet information to/from them"},{"name":"component:getsource","description":"runtime is able to read and send component source code back to client"},{"name":"network:persist","description":"runtime is able to *flash* a running graph setup into itself, making it persistent across reboots"},{"name":"protocol:graph","description":"the runtime is able to modify its graphs using the Graph protocol"},{"name":"component:setsource","description":"runtime is able to compile and run custom components sent as source code strings"}]}},"graph":{"description":"(optional) ID of the currently configured main graph running on the runtime, if any","type":"string"},"type":{"description":"type of the runtime, for example noflo-nodejs or microflo","type":"string"}}}}}]}}},"shared":{"$schema":"http://json-schema.org/draft-04/schema#","title":"Shared","description":"Shared schema fragments","message":{"id":"message","description":"protocol message","additionalProperties":false,"required":["protocol","command","payload"],"properties":{"protocol":{"type":"string","description":"type of protocol"},"command":{"type":"string","description":"command to be executed"},"payload":{"type":"object","description":"content of message"}}},"port":{"id":"port","type":"object","required":["node","port"],"additionalProperties":false,"properties":{"node":{"type":"string","description":"node identifier"},"port":{"type":"string","description":"port name"},"index":{"type":["string","number"],"description":"connection index (optional, for addressable ports)"}}},"port_definition":{"id":"port_definition","type":"array","items":{"type":"object","required":["id","type"],"additionalProperties":false,"properties":{"addressable":{"type":"boolean","description":"boolean telling whether the port is an ArrayPort"},"id":{"type":"string","description":"port name"},"type":{"description":"port datatype, for example boolean","type":"string"},"required":{"description":"boolean telling whether the port needs to be connected for the component to work","type":"boolean"},"description":{"type":"string","description":"textual description of the port"}}}},"iip":{"id":"iip","type":"object","required":["data"],"additionalProperties":false,"properties":{"data":{"description":"IIP value in its actual data type"}}},"network_event":{"id":"network_event","required":["id","src","tgt","graph"],"properties":{"id":{"type":"string","description":"textual edge identifier, usually in form of a FBP language line"},"src":{"description":"source node for the edge","$ref":"/shared/port"},"tgt":{"description":"target node for the edge","$ref":"/shared/port"},"graph":{"type":"string","description":"graph the action targets"},"subgraph":{"type":"string","description":"(optional): subgraph identifier for the event. An array of node IDs"}}}}}