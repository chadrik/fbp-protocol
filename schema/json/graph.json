{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Graph protocol",
  "description": "This protocol is utilized for communicating about graph changes in both directions.",
  "output": {
    "error": {
      "id": "output/error",
      "description": "Graph error",
      "$ref": "/shared/message"
    },
    "addnode": {
      "id": "output/addnode",
      "description": "Add node to a graph.",
      "$ref": "../input/addnode"
    },
    "removenode": {
      "id": "output/removenode",
      "description": "Remove a node from a graph.",
      "$ref": "../input/removenode"
    },
    "renamenode": {
      "id": "output/renamenode",
      "description": "Change the ID of a node in the graph",
      "$ref": "../input/renamenode"
    },
    "changenode": {
      "id": "output/changenode",
      "description": "Change the metadata associated to a node in the graph",
      "$ref": "../input/changenode"
    },
    "addedge": {
      "id": "output/addedge",
      "description": "Add an edge to the graph",
      "$ref": "../input/addedge"
    },
    "removeedge": {
      "id": "output/removeedge",
      "description": "Remove an edge from the graph",
      "$ref": "../input/removeedge"
    },
    "changeedge": {
      "id": "output/changeedge",
      "description": "Change an edge's metadata",
      "$ref": "../input/changeedge"
    },
    "addinitial": {
      "id": "output/addinitial",
      "description": "Add an IIP to the graph",
      "$ref": "../input/addinitial"
    },
    "removeinitial": {
      "id": "output/removeinitial",
      "description": "Remove an IIP from the graph",
      "$ref": "../input/removeinitial"
    },
    "addinport": {
      "id": "output/addinport",
      "description": "Add an exported inport to the graph.",
      "$ref": "../input/addinport"
    },
    "removeinport": {
      "id": "output/removeinport",
      "description": "Remove an exported port from the graph",
      "$ref": "../input/removeinport"
    },
    "renameinport": {
      "id": "output/renameinport",
      "description": "Rename an exported port in the graph",
      "$ref": "../input/renameinport"
    },
    "addoutport": {
      "id": "output/addoutport",
      "description": "Add an exported outport to the graph.",
      "$ref": "../input/addoutport"
    },
    "removeoutport": {
      "id": "output/removeoutport",
      "description": "Remove an exported port from the graph",
      "$ref": "../input/removeoutport"
    },
    "renameoutport": {
      "id": "output/renameoutport",
      "description": "Rename an exported port in the graph",
      "$ref": "../input/renameoutport"
    },
    "addgroup": {
      "id": "output/addgroup",
      "description": "Add a group to the graph",
      "$ref": "../input/addgroup"
    },
    "removegroup": {
      "id": "output/removegroup",
      "description": "Remove a group from the graph",
      "$ref": "../input/removegroup"
    },
    "renamegroup": {
      "id": "output/renamegroup",
      "description": "Rename a group in the graph.",
      "$ref": "../input/renamegroup"
    },
    "changegroup": {
      "id": "output/changegroup",
      "description": "Change a group's metadata",
      "$ref": "../input/changegroup"
    }
  },
  "input": {
    "error": {
      "description": "Graph error"
    },
    "clear": {
      "id": "input/clear",
      "description": "Initialize an empty graph.",
      "allOf": [
        {
          "$ref": "/shared/message"
        },
        {
          "properties": {
            "protocol": {
              "enum": [
                "graph"
              ]
            },
            "command": {
              "enum": [
                "addnode"
              ]
            },
            "payload": {
              "required": [
                "id"
              ],
              "additionalProperties": false,
              "properties": {
                "id": {
                  "type": "string",
                  "description": "identifier for the graph being created. Used for all subsequent messages related to the graph instance"
                },
                "name": {
                  "type": "string",
                  "description": "(optional) Human-readable label for the graph"
                },
                "library": {
                  "type": "string",
                  "description": "(optional) Component library identifier"
                },
                "main": {
                  "type": "boolean",
                  "description": "(optional) Identifies the graph as a main graph of a project that should not be registered as a component\nGraphs registered in this way should also be available for use as subgraphs in other graphs. Therefore a graph registration and later changes to it may cause component messages of the Component protocol to be sent back to the client informing of possible changes in the ports of the subgraph component."
                },
                "icon": {
                  "type": "string",
                  "description": "(optional) Icon to use for the graph when used as a component"
                },
                "description": {
                  "type": "string",
                  "description": "(optional) Description to use for the graph when used as a component"
                },
                "secret": {
                  "type": "string",
                  "description": "access token to authorize user"
                }
              }
            }
          }
        }
      ]
    },
    "addnode": {
      "id": "input/addnode",
      "description": "Add node to a graph.",
      "allOf": [
        {
          "$ref": "/shared/message"
        },
        {
          "properties": {
            "protocol": {
              "enum": [
                "graph"
              ]
            },
            "command": {
              "enum": [
                "addnode"
              ]
            },
            "payload": {
              "required": [
                "id",
                "component",
                "graph"
              ],
              "additionalProperties": false,
              "properties": {
                "id": {
                  "type": "string",
                  "description": "identifier for the node"
                },
                "component": {
                  "type": "string",
                  "description": "component name used for the node"
                },
                "metadata": {
                  "type": "object",
                  "description": "(optional): structure of key-value pairs for node metadata"
                },
                "graph": {
                  "type": "string",
                  "description": "graph the action targets"
                },
                "secret": {
                  "type": "string",
                  "description": "access token to authorize user"
                }
              }
            }
          }
        }
      ]
    },
    "removenode": {
      "id": "input/removenode",
      "description": "Remove a node from a graph.",
      "allOf": [
        {
          "$ref": "/shared/message"
        },
        {
          "properties": {
            "protocol": {
              "enum": [
                "graph"
              ]
            },
            "command": {
              "enum": [
                "removenode"
              ]
            },
            "payload": {
              "required": [
                "id",
                "graph"
              ],
              "additionalProperties": false,
              "properties": {
                "id": {
                  "type": "string",
                  "description": "identifier for the node"
                },
                "graph": {
                  "type": "string",
                  "description": "graph the action targets"
                },
                "secret": {
                  "type": "string",
                  "description": "access token to authorize user"
                }
              }
            }
          }
        }
      ]
    },
    "renamenode": {
      "id": "input/renamenode",
      "description": "Change the ID of a node in the graph",
      "allOf": [
        {
          "$ref": "/shared/message"
        },
        {
          "properties": {
            "protocol": {
              "enum": [
                "graph"
              ]
            },
            "command": {
              "enum": [
                "renamenode"
              ]
            },
            "payload": {
              "required": [
                "from",
                "to",
                "graph"
              ],
              "additionalProperties": false,
              "properties": {
                "from": {
                  "type": "string",
                  "description": "original identifier for the node"
                },
                "to": {
                  "type": "string",
                  "description": "new identifier for the node"
                },
                "graph": {
                  "type": "string",
                  "description": "graph the action targets"
                },
                "secret": {
                  "type": "string",
                  "description": "access token to authorize user"
                }
              }
            }
          }
        }
      ]
    },
    "changenode": {
      "id": "input/changenode",
      "description": "Change the metadata associated to a node in the graph",
      "allOf": [
        {
          "$ref": "/shared/message"
        },
        {
          "properties": {
            "protocol": {
              "enum": [
                "graph"
              ]
            },
            "command": {
              "enum": [
                "changenode"
              ]
            },
            "payload": {
              "required": [
                "id",
                "metadata",
                "graph"
              ],
              "additionalProperties": false,
              "properties": {
                "id": {
                  "type": "string",
                  "description": "identifier for the node"
                },
                "metadata": {
                  "type": "object",
                  "description": "structure of key-value pairs for node metadata"
                },
                "graph": {
                  "type": "string",
                  "description": "graph the action targets"
                },
                "secret": {
                  "type": "string",
                  "description": "access token to authorize user"
                }
              }
            }
          }
        }
      ]
    },
    "addedge": {
      "id": "input/addedge",
      "description": "Add an edge to the graph",
      "allOf": [
        {
          "$ref": "/shared/message"
        },
        {
          "properties": {
            "protocol": {
              "enum": [
                "graph"
              ]
            },
            "command": {
              "enum": [
                "addedge"
              ]
            },
            "payload": {
              "required": [
                "src",
                "tgt",
                "graph"
              ],
              "additionalProperties": false,
              "properties": {
                "src": {
                  "$ref": "/shared/port",
                  "description": "source node for the edge"
                },
                "tgt": {
                  "$ref": "/shared/port",
                  "description": "target node for the edge"
                },
                "metadata": {
                  "type": "object",
                  "description": "(optional): structure of key-value pairs for edge metadata"
                },
                "graph": {
                  "description": "graph the action targets"
                },
                "secret": {
                  "type": "string",
                  "description": "access token to authorize user"
                }
              }
            }
          }
        }
      ]
    },
    "removeedge": {
      "id": "input/removeedge",
      "description": "Remove an edge from the graph",
      "allOf": [
        {
          "$ref": "/shared/message"
        },
        {
          "properties": {
            "protocol": {
              "enum": [
                "graph"
              ]
            },
            "command": {
              "enum": [
                "removeedge"
              ]
            },
            "payload": {
              "additionalProperties": false,
              "required": [
                "graph",
                "src",
                "tgt"
              ],
              "properties": {
                "graph": {
                  "type": "string",
                  "description": "graph the action targets"
                },
                "src": {
                  "description": "source node for the edge",
                  "$ref": "/shared/port"
                },
                "tgt": {
                  "description": "target node for the edge",
                  "$ref": "/shared/port"
                },
                "secret": {
                  "type": "string",
                  "description": "access token to authorize user"
                }
              }
            }
          }
        }
      ]
    },
    "changeedge": {
      "id": "input/changeedge",
      "description": "Change an edge's metadata",
      "allOf": [
        {
          "$ref": "/shared/message"
        },
        {
          "properties": {
            "protocol": {
              "enum": [
                "graph"
              ]
            },
            "command": {
              "enum": [
                "changeedge"
              ]
            },
            "payload": {
              "additionalProperties": false,
              "properties": {
                "graph": {
                  "type": "string",
                  "description": "graph the action targets"
                },
                "metadata": {
                  "type": "object",
                  "description": "struct of key-value pairs for edge metadata"
                },
                "src": {
                  "description": "source node for the edge",
                  "$ref": "/shared/port"
                },
                "tgt": {
                  "description": "target node for the edge",
                  "$ref": "/shared/port"
                },
                "secret": {
                  "type": "string",
                  "description": "access token to authorize user"
                }
              }
            }
          }
        }
      ]
    },
    "addinitial": {
      "id": "input/addinitial",
      "description": "Add an IIP to the graph",
      "allOf": [
        {
          "$ref": "/shared/message"
        },
        {
          "properties": {
            "protocol": {
              "enum": [
                "graph"
              ]
            },
            "command": {
              "enum": [
                "addinitial"
              ]
            },
            "payload": {
              "additionalProperties": false,
              "properties": {
                "graph": {
                  "type": "string",
                  "description": "graph the action targets"
                },
                "metadata": {
                  "type": "object",
                  "description": "(optional): structure of key-value pairs for edge metadata"
                },
                "src": {
                  "$ref": "/shared/iip"
                },
                "tgt": {
                  "description": "target node for the edge",
                  "$ref": "/shared/port"
                },
                "secret": {
                  "type": "string",
                  "description": "access token to authorize user"
                }
              }
            }
          }
        }
      ]
    },
    "removeinitial": {
      "id": "input/removeinitial",
      "description": "Remove an IIP from the graph",
      "allOf": [
        {
          "$ref": "/shared/message"
        },
        {
          "properties": {
            "protocol": {
              "enum": [
                "graph"
              ]
            },
            "command": {
              "enum": [
                "removeinitial"
              ]
            },
            "payload": {
              "required": [
                "tgt",
                "graph"
              ],
              "additionalProperties": false,
              "properties": {
                "tgt": {
                  "$ref": "/shared/port",
                  "description": "target node for the edge"
                },
                "graph": {
                  "type": "string",
                  "description": "graph the action targets"
                },
                "secret": {
                  "type": "string",
                  "description": "access token to authorize user"
                }
              }
            }
          }
        }
      ]
    },
    "addinport": {
      "id": "input/addinport",
      "description": "Add an exported inport to the graph.",
      "allOf": [
        {
          "$ref": "/shared/message"
        },
        {
          "properties": {
            "protocol": {
              "enum": [
                "graph"
              ]
            },
            "command": {
              "enum": [
                "addinport"
              ]
            },
            "payload": {
              "additionalProperties": false,
              "required": [
                "public",
                "port",
                "node",
                "graph"
              ],
              "properties": {
                "public": {
                  "type": "string",
                  "description": "the exported name of the port"
                },
                "node": {
                  "type": "string",
                  "description": "node identifier"
                },
                "port": {
                  "type": "string",
                  "description": "internal port name"
                },
                "metadata": {
                  "type": "object",
                  "description": "(optional): structure of key-value pairs for node metadata"
                },
                "graph": {
                  "type": "string",
                  "description": "graph the action targets"
                },
                "secret": {
                  "type": "string",
                  "description": "access token to authorize user"
                }
              }
            }
          }
        }
      ]
    },
    "removeinport": {
      "id": "input/removeinport",
      "description": "Remove an exported port from the graph",
      "allOf": [
        {
          "$ref": "/shared/message"
        },
        {
          "properties": {
            "protocol": {
              "enum": [
                "graph"
              ]
            },
            "command": {
              "enum": [
                "removeinport"
              ]
            },
            "payload": {
              "additionalProperties": false,
              "properties": {
                "public": {
                  "type": "string",
                  "description": "the exported name of the port to remove"
                },
                "graph": {
                  "type": "string",
                  "description": "graph the action targets"
                },
                "secret": {
                  "type": "string",
                  "description": "access token to authorize user"
                }
              }
            }
          }
        }
      ]
    },
    "renameinport": {
      "id": "input/renameinport",
      "description": "Rename an exported port in the graph",
      "allOf": [
        {
          "$ref": "/shared/message"
        },
        {
          "properties": {
            "protocol": {
              "enum": [
                "graph"
              ]
            },
            "command": {
              "enum": [
                "renameinport"
              ]
            },
            "payload": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "type": "string",
                  "description": "original exported port name"
                },
                "to": {
                  "type": "string",
                  "description": "new exported port name"
                },
                "graph": {
                  "type": "string",
                  "description": "graph the action targets"
                },
                "secret": {
                  "type": "string",
                  "description": "access token to authorize user"
                }
              }
            }
          }
        }
      ]
    },
    "addoutport": {
      "id": "input/addoutport",
      "description": "Add an exported outport to the graph.",
      "allOf": [
        {
          "$ref": "/shared/message"
        },
        {
          "properties": {
            "protocol": {
              "enum": [
                "graph"
              ]
            },
            "command": {
              "enum": [
                "addoutport"
              ]
            },
            "payload": {
              "required": [
                "public",
                "node",
                "port",
                "graph"
              ],
              "additionalProperties": false,
              "properties": {
                "public": {
                  "type": "string",
                  "description": "the exported name of the port"
                },
                "node": {
                  "type": "string",
                  "description": "node identifier"
                },
                "port": {
                  "type": "string",
                  "description": "internal port name"
                },
                "metadata": {
                  "type": "object",
                  "description": "(optional): structure of key-value pairs for port metadata"
                },
                "graph": {
                  "type": "string",
                  "description": "graph the action targets"
                },
                "secret": {
                  "type": "string",
                  "description": "access token to authorize user"
                }
              }
            }
          }
        }
      ]
    },
    "removeoutport": {
      "id": "input/removeoutport",
      "description": "Remove an exported port from the graph",
      "allOf": [
        {
          "$ref": "/shared/message"
        },
        {
          "properties": {
            "protocol": {
              "enum": [
                "graph"
              ]
            },
            "command": {
              "enum": [
                "removeoutport"
              ]
            },
            "payload": {
              "required": [
                "public"
              ],
              "additionalProperties": false,
              "properties": {
                "public": {
                  "type": "string",
                  "description": "the exported name of the port to remove"
                },
                "graph": {
                  "type": "string",
                  "description": "graph the action targets"
                },
                "secret": {
                  "type": "string",
                  "description": "access token to authorize user"
                }
              }
            }
          }
        }
      ]
    },
    "renameoutport": {
      "id": "input/renameoutport",
      "description": "Rename an exported port in the graph",
      "allOf": [
        {
          "$ref": "/shared/message"
        },
        {
          "properties": {
            "protocol": {
              "enum": [
                "graph"
              ]
            },
            "command": {
              "enum": [
                "renameoutport"
              ]
            },
            "payload": {
              "required": [
                "from",
                "to",
                "graph"
              ],
              "additionalProperties": false,
              "properties": {
                "from": {
                  "type": "string",
                  "description": "original exported port name"
                },
                "to": {
                  "type": "string",
                  "description": "new exported port name"
                },
                "graph": {
                  "type": "string",
                  "description": "graph the action targets"
                },
                "secret": {
                  "type": "string",
                  "description": "access token to authorize user"
                }
              }
            }
          }
        }
      ]
    },
    "addgroup": {
      "id": "input/addgroup",
      "description": "Add a group to the graph",
      "allOf": [
        {
          "$ref": "/shared/message"
        },
        {
          "properties": {
            "protocol": {
              "enum": [
                "graph"
              ]
            },
            "command": {
              "enum": [
                "addgroup"
              ]
            },
            "payload": {
              "required": [
                "name",
                "nodes",
                "graph"
              ],
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "description": "the group name"
                },
                "nodes": {
                  "type": "array",
                  "description": "an array of node ids part of the group"
                },
                "metadata": {
                  "type": "object",
                  "description": "(optional): structure of key-value pairs for group metadata"
                },
                "graph": {
                  "type": "string",
                  "description": "graph the action targets"
                },
                "secret": {
                  "type": "string",
                  "description": "access token to authorize user"
                }
              }
            }
          }
        }
      ]
    },
    "removegroup": {
      "id": "input/removegroup",
      "description": "Remove a group from the graph",
      "allOf": [
        {
          "$ref": "/shared/message"
        },
        {
          "properties": {
            "protocol": {
              "enum": [
                "graph"
              ]
            },
            "command": {
              "enum": [
                "removegroup"
              ]
            },
            "payload": {
              "required": [
                "name",
                "graph"
              ],
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "description": "the group name"
                },
                "graph": {
                  "type": "string",
                  "description": "graph the action targets"
                },
                "secret": {
                  "type": "string",
                  "description": "access token to authorize user"
                }
              }
            }
          }
        }
      ]
    },
    "renamegroup": {
      "id": "input/renamegroup",
      "description": "Rename a group in the graph.",
      "allOf": [
        {
          "$ref": "/shared/message"
        },
        {
          "properties": {
            "protocol": {
              "enum": [
                "graph"
              ]
            },
            "command": {
              "enum": [
                "renamegroup"
              ]
            },
            "payload": {
              "properties": {
                "from": {
                  "type": "string",
                  "description": "original group name"
                },
                "to": {
                  "type": "string",
                  "description": "new group name"
                },
                "graph": {
                  "type": "string",
                  "description": "graph the action targets"
                },
                "secret": {
                  "type": "string",
                  "description": "access token to authorize user"
                }
              }
            }
          }
        }
      ]
    },
    "changegroup": {
      "id": "input/changegroup",
      "description": "Change a group's metadata",
      "allOf": [
        {
          "$ref": "/shared/message"
        },
        {
          "properties": {
            "protocol": {
              "enum": [
                "graph"
              ]
            },
            "command": {
              "enum": [
                "changegroup"
              ]
            },
            "payload": {
              "required": [
                "name",
                "metadata",
                "graph"
              ],
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "description": "the group name"
                },
                "metadata": {
                  "type": "object",
                  "description": "structure of key-value pairs for group metadata"
                },
                "graph": {
                  "type": "string",
                  "description": "graph the action targets"
                },
                "secret": {
                  "type": "string",
                  "description": "access token to authorize user"
                }
              }
            }
          }
        }
      ]
    }
  }
}