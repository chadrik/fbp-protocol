$schema: 'http://json-schema.org/draft-04/schema#'
title: 'Network protocol'
description: >-
  Protocol for starting and stopping FBP networks, and finding out
  about their state.

output:
  stopped:
    id: 'output/stopped'
    description: 'Inform that a given network has stopped.'
    allOf:
      - $ref: '/shared/message'
      - properties:
          protocol:
            enum: ['network']
          command:
            enum: ['stopped']
          payload:
            required: ['graph']
            additionalProperties: false
            properties:
              time:
                type: 'string'
                format: 'date-time'
                description: 'time when the network was stopped'
              uptime:
                type: number
                description: 'time the network was running, in seconds'
              graph:
                type: "string"
                description: 'graph the action targets'
              running:
                type: boolean
                description: 'whether or not network is currently running'
              started:
                type: boolean
                description: 'whether or not network has been started'
              debug:
                type: boolean
                description: 'whether or not network is in debug mode'

  started:
    id: 'output/started'
    description: 'Inform that a given network has been started.'
    allOf:
      - $ref: '/shared/message'
      - properties:
          protocol:
            enum: ['network']
          command:
            enum: ['started']
          payload:
            required: ['graph']
            additionalProperties: false
            properties:
              time:
                type: "string"
                format: "date-time"
                description: 'time when the network was started'
              graph:
                type: "string"
                description: 'graph the action targets'
              started:
                type: "boolean"
                description: 'whether or not network has started running'
              running:
                type: "boolean"
                description: 'whether or not network is currently running'
              debug:
                type: "boolean"
                description: 'whether or not network is in debug mode'

  status:
    id: 'output/status'
    description: 'Response to a getstatus message.'
    allOf:
      - $ref: '/shared/message'
      - properties:
          protocol:
            enum: ['network']
          command:
            enum: ['status']
          payload:
            required: ['running', 'graph']
            additionalProperties: false
            properties:
              graph:
                type: string
                description: 'graph the action targets'
              uptime:
                type: number
                description: 'time the network has been running, in seconds'
              started:
                type: "boolean"
                description: 'whether or not network has started running'
              running:
                type: boolean
                description: 'boolean tells whether the network is running or not'
              debug:
                type: "boolean"
                description: 'whether or not network is in debug mode'

  output:
    id: 'output/output'
    description: >-
      An output message from a running network, roughly similar to STDOUT output
      of a Unix process, or a line of console.log in JavaScript. Output can also
      be used for passing images from the runtime to the UI.'
    allOf:
      - $ref: '/shared/message'
      - properties:
          protocol:
            enum: ['network']
          command:
            enum: ['output']
          payload:
            required: ['message']
            additionalProperties: false
            properties:
              message:
                type: "string"
                description: 'contents of the output line'
              type:
                type: "string"
                enum: ["message", "previewurl"]
                description: 'type of output, either message or previewurl'
              url:
                type: "string"
                format: "uri"
                description: 'URL for an image generated by the runtime'

  error:
    id: 'output/error'
    description: >-
      An error from a running network, roughly similar to STDERR
      output of a Unix process, or a line of console.error in JavaScript.'
    allOf:
      - $ref: '/shared/message'
      - properties:
          protocol:
            enum: ['network']
          command:
            enum: ['error']
          payload:
            required: ['message']
            additionalProperties: false
            properties:
              message:
                description: 'contents of the error message'
                type: 'string'
              stack:
                description: 'stack trace'
                type: 'string'
              graph:
                type: string
                description: graph the action targets

  processerror:
    id: 'output/processerror'
    description: >-
      When in debug mode, a network can signal an error happening inside a process.
    allOf:
      - $ref: '/shared/message'
      - properties:
          protocol:
            enum: ['network']
          command:
            enum: ['processerror']
          payload:
            required: ['id', 'error', 'graph']
            additionalProperties: false
            properties:
              id:
                type: string
                description: identifier of the node
              error:
                type: string
                description: error from the component
              graph:
                type: string
                description: graph the action targets

  icon:
    id: 'output/icon'
    description: 'Icon of a component instance has changed.'
    allOf:
      - $ref: '/shared/message'
      - properties:
          protocol:
            enum: ['network']
          command:
            enum: ['icon']
          payload:
            required: ['id', 'icon', 'graph']
            additionalProperties: false
            properties:
              id:
                type: "string"
                description: 'identifier of the node'
              icon:
                type: "string"
                description: 'new icon for the component instance'
              graph:
                type: "string"
                description: 'graph the action targets'

  connect:
    id: 'output/connect'
    description: 'Beginning of transmission on an edge.'
    allOf:
      - $ref: '/shared/message'
      - properties:
          protocol:
            enum: ['network']
          command:
            enum: ['connect']
          payload:
            $ref: '/shared/network_event'
            additionalProperties: false

  begingroup:
    id: 'output/begingroup'
    description: 'Beginning of a group (bracket IP) on an edge.'
    allOf:
      - $ref: '/shared/message'
      - properties:
          protocol:
            enum: ['network']
          command:
            enum: ['begingroup']
          payload:
            allOf:
              - $ref: '/shared/network_event'
              - required: ['group']
                properties:
                  group:
                    description: 'group name'
                    type: "string"
              - additionalProperties: false
                properties:
                  group: true
                  id: true
                  tgt: true
                  src: true
                  graph: true
                  subgraph: true

  data:
    id: 'output/data'
    description: 'Data transmission on an edge.'
    allOf:
      - $ref: '/shared/message'
      - properties:
          protocol:
            enum: ['network']
          command:
            enum: ['data']
          payload:
            allOf:
              - $ref: '/shared/network_event'
              - required: ['data']
                properties:
                  data:
                    description: >-
                      actual data being transmitted, encoded in a way
                      that can be carried over the protocol transport
                  type:
                    type: string
                    description: 'The basic datatype sent'
                    example: 'array'
                  schema:
                    type: string
                    format: uri
                    description: 'Link to JSON schema describing the format of the data'
                    example: 'https://example.net/schemas/person.json'
              - additionalProperties: false
                properties:
                  data: true
                  id: true
                  src: true
                  tgt: true
                  graph: true
                  subgraph: true

  endgroup:
    id: 'output/endgroup'
    description: 'Ending of a group (bracket IP) on an edge.'
    allOf:
      - $ref: '/shared/message'
      - properties:
          protocol:
            enum: ['network']
          command:
            enum: ['endgroup']
          payload:
            allOf:
              - $ref: '/shared/network_event'
              - required: ['group']
                properties:
                  group:
                    description: 'group name'
                    type: "string"
              - additionalProperties: false
                properties:
                  group: true
                  id: true
                  src: true
                  tgt: true
                  graph: true
                  subgraph: true

  disconnect:
    id: 'output/disconnect'
    description: 'End of transmission on an edge.'
    allOf:
      - $ref: '/shared/message'
      - properties:
          protocol:
            enum: ['network']
          command:
            enum: ['disconnect']
          payload:
            $ref: '/shared/network_event'
            additionalProperties: false

  edges:
    id: 'output/edges'
    description: >-
      List of edges user has selected for inspection in a user
      interface or debugger, sent from runtime to UI.
    $ref: '../input/edges'

input:

  start:
    id: 'input/start'
    description: 'Start execution of a FBP network based on a given graph.'
    allOf:
      - $ref: '/shared/message'
      - properties:
          protocol:
            enum: ['network']
          command:
            enum: ['start']
          payload:
            required: ['graph']
            additionalProperties: false
            properties:
              graph:
                type: "string"
                description: 'graph the action targets'

  getstatus:
    id: 'input/getstatus'
    description: >-
      Get the current status of the runtime. The runtime should
      respond with a status message.
    allOf:
      - $ref: '/shared/message'
      - properties:
          protocol:
            enum: ['network']
          command:
            enum: ['getstatus']
          payload:
            required: ['graph']
            additionalProperties: false
            properties:
              graph:
                type: "string"
                description: 'graph the action targets'

  stop:
    id: 'input/stop'
    description: 'Stop execution of a FBP network based on a given graph.'
    allOf:
      - $ref: '/shared/message'
      - properties:
          protocol:
            enum: ['network']
          command:
            enum: ['stop']
          payload:
            required: ['graph']
            additionalProperties: false
            properties:
              graph:
                type: "string"
                description: 'graph the action targets'

  persist:
    id: 'input/persist'
    description: >-
      Tells the runtime to persist the current state of graphs and components
      so that they are available between restarts. Requires the network:persist
      capability.
    allOf:
      - $ref: '/shared/message'
      - properties:
          protocol:
            enum: ['network']
          command:
            enum: ['persist']
          payload:
            required: []
            additionalProperties: false
            properties:

  debug:
    id: 'input/debug'
    description: Set a network into debug mode
    allOf:
      - $ref: '/shared/message'
      - properties:
          protocol:
            enum: ['network']
          command:
            enum: ['debug']
          payload:
            additionalProperties: false
            required: ['enable', 'graph']
            properties:
              enable:
                description: tells whether to put the network in debug mode
                type: boolean
              graph:
                description: graph the action targets
                type: string

  edges:
    id: 'input/edges'
    description: >-
      List of edges user has selected for inspection in a user
      interface or debugger, sent from UI to a runtime.
    allOf:
      - $ref: '/shared/message'
      - properties:
          protocol:
            enum: ['network']
          command:
            enum: ['edges']
          payload:
            required: ['graph', 'edges']
            additionalProperties: false
            properties:
              graph:
                description: graph the action targets
                type: string
              edges:
                type: array
                description: 'list of selected edges'
                items:
                  type: object
                  required: ['src', 'tgt']
                  additionalProperties: false
                  properties:
                    src:
                      description: 'source node for the edge'
                      $ref: '/shared/port'
                    tgt:
                      description: 'target node for the edge'
                      $ref: '/shared/port'
